# -*- coding: utf-8 -*-
"""covid.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AWxJvvHUczzbmITa58OmXu7wndX-hVoa
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('country_wise_latest.csv')

# Calculate Recovered Percentage and Death Percentage
df['Recovered Percentage'] = (df['Recovered'] / df['Confirmed']) * 100
df['Death Percentage'] = (df['Deaths'] / df['Confirmed']) * 100

df['Active Cases Percentage'] = (df['Active'] / df['New cases']) * 100

# Sort the DataFrame by 'Confirmed' column in descending order
df_sorted = df.sort_values(by='Confirmed', ascending=False)

# Select the top 10 countries
df_top10 = df_sorted.head(10)

# Set up the dashboard with four subplots
fig, axes = plt.subplots(nrows=2, ncols=2, figsize=(15, 10), dpi=300)
fig.suptitle('Top 10 Countries COVID-19 Dashboard ', fontsize=16)

# Plot 0: Recovered Percentage and Death Percentage
sns.barplot(ax=axes[0, 0], x='Country/Region', y='Recovered Percentage', data=df_top10, color='lightgreen', label='Recovered %')
sns.barplot(ax=axes[0, 0], x='Country/Region', y='Death Percentage', data=df_top10, color='red', label='Death %')
axes[0, 0].set_title('Recovered and Death Percentage (Top 10 Countries)')
axes[0, 0].set_ylabel('Percentage')
axes[0, 0].tick_params(axis='x', rotation=45)
axes[0, 0].legend()

# Plot 1: Percentage increase in 1 week
sns.barplot(ax=axes[0, 1], x='Country/Region', y='1 week % increase', data=df_top10, color='lightblue', label='1 week % increase')
# sns.lineplot(ax=axes[0, 1], x='Country/Region', y='Deaths / 100 Recovered', data=df_top10, color='green', label='Recovered / 100 cases')
axes[0, 1].set_title('Percentage increase in 1 Week (Top 10 Countries)')
axes[0, 1].set_ylabel('Percentage')
axes[0, 1].tick_params(axis='x', rotation=45)

# Plot 2: Active Cases
sns.barplot(ax=axes[1, 0], x='Country/Region', y='Confirmed', data=df_top10, color='orange', label='Confirmed Cases')
sns.lineplot(ax=axes[1, 0], x='Country/Region', y='Active', data=df_top10, label='Active Cases', color='purple')
axes[1, 0].set_title('Active COVID-19 Cases and Active Cases Percentage (Top 10 Countries)')
axes[1, 0].set_ylabel('Number of Active Cases')
axes[1, 0].tick_params(axis='x', rotation=45)


# Plot 3: New Cases and New Deaths
sns.barplot(ax=axes[1, 1], x='Country/Region', y='New cases', data=df_top10, label='New Cases', color='yellow')
sns.lineplot(ax=axes[1, 1], x='Country/Region', y='New deaths', data=df_top10, label='New Deaths', color='red')
sns.lineplot(ax=axes[1, 1], x='Country/Region', y='New recovered', data=df_top10, label='New Recovered')
axes[1, 1].set_title('New COVID-19 Cases and Deaths (Top 10 Countries)')
axes[1, 1].set_ylabel('Number of Cases')
axes[1, 1].tick_params(axis='x', rotation=45)
axes[1, 1].legend()

# Add overall text description
fig.text(0.5, -0.05, \
         'Brief description of the Dashboard: \n \
         1. UK suffered maximum loss of lives in the pandemic. \n \
         2. India saw the highest increase in cases in 1 week, while UK controlled the spread \n \
         3. Active cases are at 50% or below in top 10 countries except for UK. UK has the highest Active cases. \n \
         4. Brazil is peaking in recovery, with an above average recovery for the countries with declining death rate.\n ', \
         ha='center', va='center', fontsize=15)

# Adjust layout to prevent clipping of titles
plt.tight_layout(rect=[0, 0.03, 1, 0.95])

# Show the dashboard
plt.savefig('sample.png', dpi=300, bbox_inches='tight')

